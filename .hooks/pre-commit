#!/usr/bin/env bash

rustfmt --version &>/dev/null
if [ $? != 0 ]; then
	printf "[pre_commit] \033[0;31merror\033[0m: \"rustfmt\" not available. \n"
	printf "[pre_commit] \033[0;31merror\033[0m: rustfmt can be installed via - \n"
	printf "[pre_commit] $ rustup component add rustfmt-preview \n"
	exit 1
fi

problem_files=()

# first collect all the files that need reformatting
for file in $(git diff --name-only --cached); do
	if [ ${file: -3} == ".rs" ]; then
		cargo fmt -- --check $file &>/dev/null
		if [ $? != 0 ]; then
			problem_files+=($file)
		fi
	fi
done

if [ ${#problem_files[@]} == 0 ]; then
  # nothing to do
  printf "[pre_commit] cargo fmt \033[0;32mok\033[0m \n"
else
  # reformat the files that need it and re-stage them.
	printf "[pre_commit] the following files were cargo fmt'd before commit: \n"
  for file in ${problem_files[@]}; do
    cargo fmt -- $file
    git add $file
		printf "\033[0;32m    $file\033[0m \n"
  done
fi

exit 0
